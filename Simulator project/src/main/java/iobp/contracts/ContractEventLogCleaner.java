package iobp.contracts;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.5.16.
 */
@SuppressWarnings("rawtypes")
public class ContractEventLogCleaner extends Contract {
    public static final String BINARY = "";

    public static final String FUNC_CLEAREVENT = "clearEvent";

    @Deprecated
    protected ContractEventLogCleaner(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected ContractEventLogCleaner(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected ContractEventLogCleaner(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected ContractEventLogCleaner(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> clearEvent(BigInteger _caseId, String _taskName, String _timestamp, String _resource, BigInteger _cost) {
        final Function function = new Function(
                FUNC_CLEAREVENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_caseId), 
                new org.web3j.abi.datatypes.Utf8String(_taskName), 
                new org.web3j.abi.datatypes.Utf8String(_timestamp), 
                new org.web3j.abi.datatypes.Address(160, _resource), 
                new org.web3j.abi.datatypes.generated.Uint256(_cost)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static ContractEventLogCleaner load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new ContractEventLogCleaner(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static ContractEventLogCleaner load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new ContractEventLogCleaner(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static ContractEventLogCleaner load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new ContractEventLogCleaner(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static ContractEventLogCleaner load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new ContractEventLogCleaner(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<ContractEventLogCleaner> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String eventlogContractAddress, Boolean performDataCleaning) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, eventlogContractAddress), 
                new org.web3j.abi.datatypes.Bool(performDataCleaning)));
        return deployRemoteCall(ContractEventLogCleaner.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<ContractEventLogCleaner> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String eventlogContractAddress, Boolean performDataCleaning) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, eventlogContractAddress), 
                new org.web3j.abi.datatypes.Bool(performDataCleaning)));
        return deployRemoteCall(ContractEventLogCleaner.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<ContractEventLogCleaner> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String eventlogContractAddress, Boolean performDataCleaning) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, eventlogContractAddress), 
                new org.web3j.abi.datatypes.Bool(performDataCleaning)));
        return deployRemoteCall(ContractEventLogCleaner.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<ContractEventLogCleaner> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String eventlogContractAddress, Boolean performDataCleaning) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, eventlogContractAddress), 
                new org.web3j.abi.datatypes.Bool(performDataCleaning)));
        return deployRemoteCall(ContractEventLogCleaner.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }
}
